{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.module.ts","./src/app/components/app/app.component.html","./src/app/components/app/app.component.ts","./src/app/components/available-device/available-device.component.html","./src/app/components/available-device/available-device.component.ts","./src/app/components/detail/base-control.component.ts","./src/app/components/detail/boolean/boolean-control.component.html","./src/app/components/detail/boolean/boolean-control.component.ts","./src/app/components/detail/continuous/continuous-control.component.html","./src/app/components/detail/continuous/continuous-control.component.ts","./src/app/components/detail/device-details.component.html","./src/app/components/detail/device-details.component.ts","./src/app/components/detail/enum/enum-control.component.html","./src/app/components/detail/enum/enum-control.component.ts","./src/app/components/diagram/diagram.component.html","./src/app/components/diagram/diagram.component.ts","./src/app/components/index.ts","./src/app/components/login/login.component.html","./src/app/components/login/login.component.ts","./src/app/components/navigation/navigation.component.html","./src/app/components/navigation/navigation.component.ts","./src/app/components/options/options.component.html","./src/app/components/options/options.component.ts","./src/app/components/overview/overview.component.html","./src/app/components/overview/overview.component.ts","./src/app/guards/auth.guard.ts","./src/app/guards/index.ts","./src/app/models/arrow.model.ts","./src/app/models/control.ts","./src/app/models/index.ts","./src/app/rest/authentication.client.ts","./src/app/rest/device.client.ts","./src/app/rest/index.ts","./src/app/rest/password.client.ts","./src/app/rest/rest.client.ts","./src/app/services/app-load.service.ts","./src/app/services/authentication.service.ts","./src/app/services/device.service.ts","./src/app/services/diagram.service.ts","./src/app/services/index.ts","./src/app/services/session-storage.service.ts","./src/app/services/token-interceptor.service.ts","./src/app/services/user.service.ts","./src/app/validators/confirm.validator.ts","./src/app/validators/index.ts","./src/app/validators/max.validator.ts","./src/app/validators/min.validator.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {LoginComponent, OverviewComponent, OptionsComponent} from './components';\nimport {AuthGuard} from './guards';\nimport {DeviceDetailsComponent} from './components/detail/device-details.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/overview', pathMatch: 'full'},\n  {path: 'login', component: LoginComponent},\n  {path: 'overview', component: OverviewComponent, canActivate: [AuthGuard]},\n  {path: 'options', component: OptionsComponent, canActivate: [AuthGuard]},\n  {path: 'details/:id', component: DeviceDetailsComponent, canActivate: [AuthGuard]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport {\n  AppComponent,\n  AvailableDeviceComponent,\n  BooleanControlComponent,\n  ContinuousControlComponent,\n  DeviceDetailsComponent,\n  DiagramComponent,\n  EnumControlComponent,\n  NavigationComponent,\n  LoginComponent,\n  OverviewComponent,\n  OptionsComponent\n} from './components';\nimport { AuthGuard } from './guards';\nimport { AuthenticationClient, DeviceClient, PasswordClient } from './rest';\nimport { AuthenticationService, DeviceService, DiagramService, SessionStorageService, UserService } from './services';\nimport { ConfirmValidator, MaxValidator, MinValidator } from './validators';\nimport { AppLoadService } from './services/app-load.service';\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from './services/token-interceptor.service';\nimport { JwtInterceptor } from './services/jwt-interceptor';\n\nexport function check_token_expired(appLoadService: AppLoadService) {\n  return () => appLoadService.checkTokenExpiration();\n}\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    NgxChartsModule,\n    AppRoutingModule\n  ],\n  declarations: [\n    AppComponent,\n    AvailableDeviceComponent,\n    DiagramComponent,\n    NavigationComponent,\n    LoginComponent,\n    OverviewComponent,\n    OptionsComponent,\n    DeviceDetailsComponent,\n    BooleanControlComponent,\n    ContinuousControlComponent,\n    EnumControlComponent,\n    ConfirmValidator,\n    MaxValidator,\n    MinValidator\n  ],\n  providers: [\n    AppLoadService,\n    { provide: APP_INITIALIZER, useFactory: check_token_expired, deps: [AppLoadService], multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\n    AuthGuard,\n    AuthenticationClient,\n    DeviceClient,\n    PasswordClient,\n    AuthenticationService,\n    DeviceService,\n    DiagramService,\n    SessionStorageService,\n    UserService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"<div role=\\\"navigation\\\" aria-label=\\\"jumplinks\\\">\\n  <a href=\\\"javascript:void(0)\\\" (click)=\\\"jumpTo('content')\\\" class=\\\"accessibility\\\">Zum Inhalt springen</a>\\n</div>\\n\\n<app-navigation [component]=\\\"component\\\"></app-navigation>\\n\\n<router-outlet (activate)=\\\"component = $event\\\" id=\\\"content\\\" class=\\\"main-container\\\"></router-outlet>\\n\\n<footer>\\n  © 2018 <abbr title=\\\"Business Informatics Group\\\">BIG</abbr> Smart Production\\n</footer>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/app/app.component.html\n// module id = ./src/app/components/app/app.component.html\n// module chunks = main","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  component = null;\n\n  jumpTo(id): void {\n    const content = document.getElementById(id);\n    if (content) {\n      content.scrollIntoView();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/app/app.component.ts","module.exports = \"<dl class=\\\"device-properties\\\">\\n  <dt class=\\\"accessibility\\\">Maschinentyp</dt>\\n  <dd [id]=\\\"'available-title-' + data.type\\\" class=\\\"device-type\\\">{{data.title}}</dd>\\n</dl>\\n<div class=\\\"device-image\\\">\\n  <img width=\\\"100\\\" src=\\\"data:\\\" [src]=\\\"data.image\\\" [attr.alt]=\\\"data.title\\\">\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/available-device/available-device.component.html\n// module id = ./src/app/components/available-device/available-device.component.html\n// module chunks = main","import {AfterViewInit, Component, ElementRef, Input, OnDestroy} from '@angular/core';\nimport {AvailableDevice} from '../../models';\n\ndeclare var $: any;\n\n@Component({\n  selector: '[app-available-device]',\n  templateUrl: './available-device.component.html',\n  host: {\n    'class': 'device',\n    'tabindex': '0',\n    '[attr.aria-labelledby]': '\"available-title-\" + data.type',\n    '[attr.title]': 'data.title'\n  }\n})\nexport class AvailableDeviceComponent implements AfterViewInit, OnDestroy {\n  @Input('data')\n  data: AvailableDevice;\n\n  private readonly $el;\n\n  constructor(el: ElementRef) {\n    this.$el = $(el.nativeElement);\n  }\n\n  ngAfterViewInit() {\n    this.$el.data('device', JSON.stringify(this.data));\n    this.$el.draggable({\n      cursor: 'move',\n      containment: 'document',\n      revert: 'invalid',\n      helper: () => this.$el.find('.device-image').first().clone(),\n      zIndex: 50\n    });\n  }\n\n  ngOnDestroy() {\n    this.$el.draggable('destroy');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/available-device/available-device.component.ts","import {OnDestroy, OnInit} from '@angular/core';\n\nimport {DeviceService} from '../../services';\nimport {Control, LogEntry} from '../../models';\nimport '../../models/device.model';\nimport {Subscription} from 'rxjs/Subscription';\n\nexport abstract class BaseControlComponent<T> implements OnInit, OnDestroy {\n  abstract device: Device<Control<T>>;\n  value: T;\n  log: string;\n\n  private subscription: Subscription;\n\n  protected constructor(private readonly deviceService: DeviceService) {\n  }\n\n  ngOnInit(): void {\n    this.value = this.device.control.current;\n    this.log = this.device.control.log.map(entry => this.formatLogEntry(entry)).join('');\n    this.addToChart(...this.device.control.log);\n\n    this.subscription = this.deviceService.getLogUpdates().subscribe(update => {\n      if (update.device === this.device) {\n        this.log += this.formatLogEntry(update.logEntry);\n        this.addToChart(update.logEntry);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n  }\n\n  onSubmit(): void {\n    this.deviceService.updateDevice(this.device, this.value);\n  }\n\n  private formatLogEntry(entry: LogEntry<T>): string {\n    return `${entry.date.toLocaleString()}: ${this.valueToString(entry.oldValue)} -> ${this.valueToString(entry.newValue)}\\n`;\n  }\n\n  protected abstract addToChart(...entries: LogEntry<T>[]);\n\n  protected abstract valueToString(value: T): string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/detail/base-control.component.ts","module.exports = \"<div class=\\\"details-image-container\\\">\\n  <ngx-charts-pie-chart\\n    [scheme]=\\\"colorScheme\\\"\\n    [results]=\\\"data\\\"\\n    [legend]=\\\"true\\\"\\n    [labels]=\\\"true\\\"\\n    [doughnut]=\\\"true\\\">\\n  </ngx-charts-pie-chart>\\n</div>\\n<div class=\\\"details-control-container\\\">\\n  <label class=\\\"accessibility\\\" for=\\\"details-log\\\">Letzte Werteänderungen</label>\\n  <textarea id=\\\"details-log\\\" class=\\\"details-logs\\\" [ngModel]=\\\"log\\\" placeholder=\\\"Gerätelog\\\" readonly rows=\\\"6\\\"></textarea>\\n\\n  <div class=\\\"details-settings\\\">\\n    <h3>{{device.control.title}}</h3>\\n\\n    <form (submit)=\\\"onSubmit()\\\" #form=\\\"ngForm\\\">\\n      <label class=\\\"form-label\\\">derzeit: {{valueToString(device.control.current)}}</label>\\n\\n      <label class=\\\"accessibility\\\" for=\\\"value\\\">Bitte gewünschten Wert auswählen.</label>\\n      <input type=\\\"checkbox\\\" class=\\\"form-input\\\" id=\\\"value\\\" name=\\\"value\\\" [(ngModel)]=\\\"value\\\">\\n      <button class=\\\"button button-submit\\\" [disabled]=\\\"form.invalid\\\">Wert setzen</button>\\n    </form>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/detail/boolean/boolean-control.component.html\n// module id = ./src/app/components/detail/boolean/boolean-control.component.html\n// module chunks = main","import {Component, Input} from '@angular/core';\n\nimport {BaseControlComponent} from '../base-control.component';\nimport {DeviceService} from '../../../services';\nimport {BooleanControl, LogEntry} from '../../../models';\nimport '../../../models/device.model';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-boolean-control',\n  templateUrl: './boolean-control.component.html'\n})\nexport class BooleanControlComponent extends BaseControlComponent<boolean> {\n  @Input()\n  device: Device<BooleanControl>;\n\n  data = [{\n    'name': 'Aus',\n    'value': 0\n  }, {\n    'name': 'An',\n    'value': 0\n  }];\n\n  readonly colorScheme = {\n    domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']\n  };\n\n  constructor(deviceService: DeviceService) {\n    super(deviceService);\n  }\n\n  protected addToChart(...entries: LogEntry<boolean>[]) {\n    entries.forEach(entry => this.data[entry.newValue ? 1 : 0].value++);\n    this.data = [...this.data];\n  }\n\n  valueToString(value: boolean): string {\n    return value ? 'An' : 'Aus';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/detail/boolean/boolean-control.component.ts","module.exports = \"<div class=\\\"details-image-container\\\">\\n  <ngx-charts-line-chart\\n    [scheme]=\\\"colorScheme\\\"\\n    [results]=\\\"data\\\"\\n    [xAxisLabel]=\\\"xAxisLabel\\\"\\n    [yAxisLabel]=\\\"yAxisLabel\\\"\\n    [xAxis]=\\\"true\\\"\\n    [yAxis]=\\\"true\\\"\\n    [legend]=\\\"true\\\"\\n    [tooltipDisabled]=\\\"true\\\"\\n    [showXAxisLabel]=\\\"true\\\"\\n    [showYAxisLabel]=\\\"true\\\"\\n    [autoScale]=\\\"true\\\">\\n  </ngx-charts-line-chart>\\n</div>\\n<div class=\\\"details-control-container\\\">\\n  <label class=\\\"accessibility\\\" for=\\\"details-log\\\">Letzte Werteänderungen</label>\\n  <textarea id=\\\"details-log\\\" class=\\\"details-logs\\\" [ngModel]=\\\"log\\\" placeholder=\\\"Gerätelog\\\" readonly rows=\\\"6\\\"></textarea>\\n\\n  <div class=\\\"details-settings\\\">\\n    <h3>{{device.control.title}}</h3>\\n\\n    <form (submit)=\\\"onSubmit()\\\" #form=\\\"ngForm\\\">\\n      <label class=\\\"form-label\\\">derzeit: {{device.control.current}}</label>\\n\\n      <label class=\\\"accessibility\\\" for=\\\"value\\\">Bitte gewünschten Wert eingeben.</label>\\n      <input type=\\\"number\\\" class=\\\"form-input\\\" id=\\\"value\\\" name=\\\"value\\\" step=\\\"1\\\"\\n             [min]=\\\"device.control.min\\\" [max]=\\\"device.control.max\\\" required [(ngModel)]=\\\"value\\\">\\n      <button class=\\\"button button-submit\\\" [disabled]=\\\"form.invalid\\\">Wert setzen</button>\\n    </form>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/detail/continuous/continuous-control.component.html\n// module id = ./src/app/components/detail/continuous/continuous-control.component.html\n// module chunks = main","import {Component, Input} from '@angular/core';\n\nimport {BaseControlComponent} from '../base-control.component';\nimport {DeviceService} from '../../../services';\nimport {ContinuousControl, LogEntry} from '../../../models';\nimport '../../../models/device.model';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-continuous-control',\n  templateUrl: './continuous-control.component.html'\n})\nexport class ContinuousControlComponent extends BaseControlComponent<number> {\n  @Input()\n  device: Device<ContinuousControl>;\n\n  data = [{\n    name: '',\n    series: [{name: new Date().toLocaleString(), value: 0}]\n  }];\n  xAxisLabel = 'Zeit';\n  yAxisLabel = '';\n  readonly colorScheme = {\n    domain: ['#333333', '#AAAAAA']\n  };\n\n  constructor(deviceService: DeviceService) {\n    super(deviceService);\n  }\n\n  ngOnInit(): void {\n    this.data[0].name = this.device.control.yLabel;\n    this.yAxisLabel = this.device.control.yLabel;\n    super.ngOnInit();\n  }\n\n  protected addToChart(...entries: LogEntry<number>[]) {\n    entries.forEach(entry => this.data[0].series.push({'name': entry.date.toLocaleString(), 'value': entry.newValue}));\n    this.data = [...this.data];\n  }\n\n  protected valueToString(value: number): string {\n    return value.toString();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/detail/continuous/continuous-control.component.ts","module.exports = \"<main aria-labelledby=\\\"deviceheadline\\\" class=\\\"details\\\">\\n  <ng-container *ngIf=\\\"device\\\">\\n    <h2 id=\\\"deviceheadline\\\">{{device.title}}</h2>\\n\\n    <div class=\\\"details-container\\\" [ngSwitch]=\\\"device.control.type\\\">\\n      <app-boolean-control *ngSwitchCase=\\\"ControlType.BOOLEAN\\\" [device]=\\\"device\\\"></app-boolean-control>\\n      <app-continuous-control *ngSwitchCase=\\\"ControlType.CONTINUOUS\\\" [device]=\\\"device\\\"></app-continuous-control>\\n      <app-enum-control *ngSwitchCase=\\\"ControlType.ENUM\\\" [device]=\\\"device\\\"></app-enum-control>\\n    </div>\\n  </ng-container>\\n  <p *ngIf=\\\"!device\\\">Gerät nicht gefunden.</p>\\n</main>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/detail/device-details.component.html\n// module id = ./src/app/components/detail/device-details.component.html\n// module chunks = main","import {Component, OnDestroy} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\n\nimport {Subscription} from 'rxjs/Subscription';\nimport 'rxjs/add/operator/switchMap';\n\nimport {ControlType} from '../../models';\nimport {DeviceService} from '../../services';\nimport '../../models/device.model';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-device-detail',\n  templateUrl: './device-details.component.html'\n})\n\nexport class DeviceDetailsComponent implements OnDestroy {\n  device: Device<any> = null;\n\n  readonly ControlType = ControlType;\n  readonly subscription: Subscription;\n\n  constructor(private deviceService: DeviceService, private router: Router, private route: ActivatedRoute) {\n    this.subscription = this.route.params\n      .switchMap(params => this.deviceService.getDevice(+params['id']))\n      .subscribe(device => this.device = device);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/detail/device-details.component.ts","module.exports = \"<div class=\\\"details-image-container\\\">\\n  <ngx-charts-pie-chart\\n    [scheme]=\\\"colorScheme\\\"\\n    [results]=\\\"data\\\"\\n    [legend]=\\\"true\\\"\\n    [labels]=\\\"true\\\">\\n  </ngx-charts-pie-chart>\\n</div>\\n<div class=\\\"details-control-container\\\">\\n  <label class=\\\"accessibility\\\" for=\\\"details-log\\\">Letzte Werteänderungen</label>\\n  <textarea id=\\\"details-log\\\" class=\\\"details-logs\\\" [ngModel]=\\\"log\\\" placeholder=\\\"Gerätelog\\\" readonly rows=\\\"6\\\"></textarea>\\n\\n  <div class=\\\"details-settings\\\">\\n    <h3>{{device.control.title}}</h3>\\n\\n    <form (submit)=\\\"onSubmit()\\\" #form=\\\"ngForm\\\">\\n      <label class=\\\"form-label\\\">derzeit: {{valueToString(device.control.current)}}</label>\\n\\n      <label class=\\\"accessibility\\\" for=\\\"value\\\">Bitte gewünschten Wert aus Menü auswählen.</label>\\n      <select class=\\\"form-input\\\" id=\\\"value\\\" name=\\\"value\\\" required [(ngModel)]=\\\"value\\\">\\n        <option *ngFor=\\\"let val of device.control.values, index as i\\\" [value]=\\\"i\\\">{{val}}</option>\\n      </select>\\n      <button class=\\\"button button-submit\\\" [disabled]=\\\"form.invalid\\\">Wert setzen</button>\\n    </form>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/detail/enum/enum-control.component.html\n// module id = ./src/app/components/detail/enum/enum-control.component.html\n// module chunks = main","import {Component, Input} from '@angular/core';\n\nimport {BaseControlComponent} from '../base-control.component';\nimport {DeviceService} from '../../../services';\nimport {EnumControl, LogEntry} from '../../../models';\nimport '../../../models/device.model';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-enum-control',\n  templateUrl: './enum-control.component.html'\n})\nexport class EnumControlComponent extends BaseControlComponent<number> {\n  @Input()\n  device: Device<EnumControl>;\n\n  data = [];\n  readonly colorScheme = {\n    domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']\n  };\n\n  constructor(deviceService: DeviceService) {\n    super(deviceService);\n  }\n\n  ngOnInit(): void {\n    this.data = this.device.control.values.map(name => {\n      return {name: name, value: 0};\n    });\n    super.ngOnInit();\n  }\n\n  onSubmit(): void {\n    // Transform string value from html select to a number\n    this.value = +this.value;\n    super.onSubmit();\n  }\n\n  protected addToChart(...entries: LogEntry<number>[]) {\n    entries.forEach(entry => this.data[entry.newValue].value++);\n    this.data = [...this.data];\n  }\n\n  valueToString(value: number): string {\n    return this.device.control.values[value];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/detail/enum/enum-control.component.ts","module.exports = \"<div class=\\\"diagram\\\" #diagram>\\n  <div class=\\\"arrows\\\">\\n    <svg>\\n      <defs>\\n        <marker id=\\\"arrow-marker\\\" markerWidth=\\\"10\\\" markerHeight=\\\"10\\\" refX=\\\"7\\\" refY=\\\"4\\\"\\n                orient=\\\"auto\\\">\\n          <path d=\\\"M0,0 L0,8 L8,4 z\\\" class=\\\"arrow-marker\\\"></path>\\n        </marker>\\n        <marker id=\\\"arrow-marker-active\\\" markerWidth=\\\"10\\\" markerHeight=\\\"10\\\" refX=\\\"7\\\" refY=\\\"4\\\"\\n                orient=\\\"auto\\\">\\n          <path d=\\\"M0,0 L0,8 L8,4 z\\\" class=\\\"arrow-marker-active\\\"></path>\\n        </marker>\\n      </defs>\\n    </svg>\\n  </div>\\n  <ul class=\\\"devices device-list\\\"></ul>\\n</div>\\n\\n<div class=\\\"arrow-device-add\\\" #arrowReference>\\n  <svg width=\\\"18px\\\" height=\\\"8px\\\">\\n    <defs>\\n      <marker id=\\\"arrow-marker-add\\\" markerWidth=\\\"10\\\" markerHeight=\\\"10\\\" refY=\\\"4\\\" orient=\\\"auto\\\">\\n        <path d=\\\"M0,0 L0,8 L8,4 z\\\" class=\\\"arrow-marker\\\"></path>\\n      </marker>\\n    </defs>\\n    <path d=\\\"M0,4 L16,4\\\" class=\\\"arrow-path\\\" marker-end=\\\"url(#arrow-marker-add)\\\" style=\\\"stroke-width: 1px\\\"></path>\\n  </svg>\\n</div>\\n\\n<div class=\\\"contextMenu\\\" #contextMenu>\\n  <ul>\\n    <li><a href=\\\"#\\\" class=\\\"contextView\\\">\\n      <img class=\\\"device-edit\\\" src=\\\"images/edit.png\\\" alt=\\\"Gerät anzeigen\\\"> Detailseite\\n    </a></li>\\n    <li><a href=\\\"#\\\" class=\\\"contextDelete\\\">\\n      <img class=\\\"device-remove\\\" src=\\\"images/remove.png\\\" alt=\\\"Gerät löschen\\\"/> Löschen\\n    </a></li>\\n  </ul>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/diagram/diagram.component.html\n// module id = ./src/app/components/diagram/diagram.component.html\n// module chunks = main","import {Component, AfterViewInit, ElementRef, Input, OnDestroy, ViewChild} from '@angular/core';\n\nimport {DiagramService} from '../../services';\nimport '../../models/diagram.model';\n\n@Component({\n  selector: 'app-diagram',\n  templateUrl: './diagram.component.html'\n})\nexport class DiagramComponent implements AfterViewInit, OnDestroy {\n  @Input('arrowAdd')\n  arrowAdd;\n\n  @ViewChild('diagram')\n  el: ElementRef;\n\n  @ViewChild('contextMenu')\n  context: ElementRef;\n\n  @ViewChild('arrowReference')\n  arrowReference: ElementRef;\n\n  private diagram: Diagram;\n\n  constructor(private readonly diagramService: DiagramService) {\n  }\n\n  ngAfterViewInit() {\n    this.diagram = new Diagram(this.diagramService, this.el.nativeElement, this.arrowAdd, this.context.nativeElement,\n      this.arrowReference.nativeElement);\n  }\n\n  ngOnDestroy() {\n    if (this.diagram) {\n      this.diagram.destroy();\n      this.diagram = null;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/diagram/diagram.component.ts","export * from './app/app.component';\nexport * from './navigation/navigation.component';\n\nexport * from './login/login.component';\nexport * from './overview/overview.component';\nexport * from './options/options.component'\n\nexport * from './available-device/available-device.component';\nexport * from './diagram/diagram.component';\n\nexport * from './detail/device-details.component';\nexport * from './detail/boolean/boolean-control.component';\nexport * from './detail/continuous/continuous-control.component';\nexport * from './detail/enum/enum-control.component';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/index.ts","module.exports = \"<main aria-labelledby=\\\"formheadline\\\">\\n  <form class=\\\"form form-horizontal\\\" #form=\\\"ngForm\\\" (submit)=\\\"login(form)\\\">\\n    <h2 id=\\\"formheadline\\\" class=\\\"login-headline\\\">Anmelden</h2>\\n\\n    <div class=\\\"form-row\\\">\\n      <label class=\\\"form-label\\\" for=\\\"username-input\\\">Benutzername</label>\\n      <input type=\\\"text\\\" class=\\\"form-input\\\" id=\\\"username-input\\\" name=\\\"username\\\"\\n             placeholder=\\\"Benutzername\\\" autocomplete=\\\"username\\\" required\\n             #username=\\\"ngModel\\\" ngModel>\\n    </div>\\n    <ul *ngIf=\\\"username.invalid && username.touched\\\" class=\\\"error-text\\\">\\n      <li *ngIf=\\\"username.errors?.required\\\">Der Benutzername muss angegeben werden.</li>\\n    </ul>\\n\\n    <div class=\\\"form-row\\\">\\n      <label class=\\\"form-label\\\" for=\\\"password-input\\\">Passwort</label>\\n      <input type=\\\"password\\\" class=\\\"form-input\\\" id=\\\"password-input\\\" name=\\\"password\\\"\\n             placeholder=\\\"Passwort\\\" autocomplete=\\\"current-password\\\" required minlength=\\\"4\\\" maxlength=\\\"12\\\"\\n             #password=\\\"ngModel\\\" ngModel>\\n    </div>\\n    <ul *ngIf=\\\"password.invalid && password.touched\\\" class=\\\"error-text\\\">\\n      <li *ngIf=\\\"password.errors?.required\\\">Das Passwort muss angegeben werden.</li>\\n    </ul>\\n\\n    <ul *ngIf=\\\"serverErrors\\\" class=\\\"error-text\\\">\\n      <li *ngIf=\\\"serverErrors.credentials\\\">Die Zugangsdaten waren ungültig</li>\\n    </ul>\\n\\n    <div class=\\\"form-row form-row-center\\\">\\n      <button class=\\\"button button-submit\\\" [disabled]=\\\"form.invalid\\\">Anmelden</button>\\n    </div>\\n\\n    <div *ngIf=\\\"errorMessage\\\" class=\\\"form-row form-row-center\\\">Fehler: {{errorMessage}}</div>\\n  </form>\\n</main>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/login/login.component.html\n// module id = ./src/app/components/login/login.component.html\n// module chunks = main","import {Component} from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {Router} from '@angular/router';\n\nimport {AuthenticationService} from '../../services';\n\n@Component({\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent {\n  errorMessage: string = null;\n  serverErrors: any = {};\n\n  constructor(private readonly router: Router, private readonly authenticationService: AuthenticationService) {\n    if (this.authenticationService.isLoggedIn) {\n      // noinspection JSIgnoredPromiseFromCall\n      this.router.navigate(['/']);\n    }\n  }\n\n  login(form: NgForm): void {\n    this.authenticationService\n      .login(form.value.username, form.value.password)\n      .subscribe(() => {\n        // noinspection JSIgnoredPromiseFromCall\n        this.router.navigate(['/']);\n      }, response => {\n        this.errorMessage = response.message;\n        this.serverErrors = response.errors || null;\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/login/login.component.ts","module.exports = \"<header class=\\\"bannerheader\\\" aria-labelledby=\\\"bannerheadline\\\">\\n  <a [routerLink]=\\\"loggedIn ? '/overview' : '/login'\\\">\\n    <img class=\\\"title-image\\\" src=\\\"/images/big-logo-small.png\\\" title=\\\"BIG Smart Production Logo\\\"\\n         alt=\\\"BIG Smart Production Logo\\\">\\n  </a>\\n  <h1 class=\\\"header-title\\\" id=\\\"bannerheadline\\\">\\n    BIG Smart Production\\n  </h1>\\n  <nav aria-labelledby=\\\"navigationheadline\\\">\\n    <h2 class=\\\"accessibility\\\" id=\\\"navigationheadline\\\">Navigation</h2>\\n    <ul class=\\\"navigation-list\\\">\\n      <li class=\\\"overflow-icon\\\">\\n        <a href=\\\"#\\\" class=\\\"button\\\" accesskey=\\\"1\\\">☰</a>\\n      </li>\\n      <li class=\\\"nav-items\\\">\\n        <ul>\\n          <li *ngIf=\\\"showOverviewLink\\\">\\n            <a routerLink=\\\"/overview\\\" class=\\\"button\\\" accesskey=\\\"1\\\">Übersicht</a>\\n          </li>\\n          <li *ngIf=\\\"showOptionsLink\\\">\\n            <a routerLink=\\\"/options\\\" class=\\\"button\\\" accesskey=\\\"2\\\">Optionen</a>\\n          </li>\\n          <li *ngIf=\\\"loggedIn\\\">\\n            <button (click)=\\\"logout()\\\" class=\\\"button\\\" accesskey=\\\"3\\\">Abmelden</button>\\n          </li>\\n        </ul>\\n      </li>\\n    </ul>\\n  </nav>\\n</header>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/navigation/navigation.component.html\n// module id = ./src/app/components/navigation/navigation.component.html\n// module chunks = main","import {Component, Input} from '@angular/core';\nimport {Router} from '@angular/router';\n\nimport {LoginComponent} from '../login/login.component';\nimport {OptionsComponent} from '../options/options.component';\nimport {OverviewComponent} from '../overview/overview.component';\nimport {AuthenticationService} from '../../services';\nimport {DeviceDetailsComponent} from \"../detail/device-details.component\";\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html'\n})\nexport class NavigationComponent {\n\n  @Input()\n  component = null;\n\n  constructor(private readonly router: Router, private readonly authenticationService: AuthenticationService) {\n  }\n\n  logout(): void {\n    this.authenticationService.logout();\n    // noinspection JSIgnoredPromiseFromCall\n    this.router.navigate(['/login']);\n  }\n\n  get showOverviewLink(): boolean {\n    return this.loggedIn && !(this.component instanceof OverviewComponent);\n  }\n\n  get showOptionsLink(): boolean {\n    return this.loggedIn && !(this.component instanceof OptionsComponent);\n  }\n\n  get loggedIn(): boolean {\n    return !(this.component instanceof LoginComponent);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/navigation/navigation.component.ts","module.exports = \"<main aria-labelledby=\\\"formheadline\\\">\\n  <form class=\\\"form form-horizontal\\\" #form=\\\"ngForm\\\" (submit)=\\\"changePassword(form)\\\">\\n    <h2 id=\\\"formheadline\\\" class=\\\"options-headline\\\">Passwort ändern</h2>\\n\\n    <div class=\\\"form-row\\\">\\n      <label class=\\\"form-label\\\" for=\\\"old-password-input\\\">Altes Passwort</label>\\n      <input type=\\\"password\\\" class=\\\"form-input\\\" id=\\\"old-password-input\\\" name=\\\"oldPassword\\\"\\n             placeholder=\\\"Altes Passwort\\\" autocomplete=\\\"current-password\\\" required\\n             #oldPassword=\\\"ngModel\\\" ngModel>\\n    </div>\\n    <ul *ngIf=\\\"(oldPassword.invalid && oldPassword.touched) || serverErrors?.oldPassword\\\" class=\\\"error-text\\\">\\n      <li *ngIf=\\\"oldPassword.errors?.required\\\">Das alte Passwort muss angegeben werden.</li>\\n      <li *ngIf=\\\"serverErrors?.oldPassword\\\">Das alte Passwort war inkorrekt.</li>\\n    </ul>\\n\\n    <div class=\\\"form-row\\\">\\n      <label class=\\\"form-label\\\" for=\\\"new-password-input\\\">Neues Passwort</label>\\n      <input type=\\\"password\\\" class=\\\"form-input\\\" id=\\\"new-password-input\\\" name=\\\"newPassword\\\"\\n             placeholder=\\\"Neues Passwort\\\" autocomplete=\\\"new-password\\\" required minlength=\\\"8\\\" maxlength=\\\"12\\\"\\n             pattern=\\\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).*\\\" #newPassword=\\\"ngModel\\\" ngModel\\n             title=\\\"8-12 Zeichen, jeweils mindestens ein Großbuchstabe, Kleinbuchstabe und eine Zahl\\\">\\n    </div>\\n    <ul *ngIf=\\\"newPassword.invalid && newPassword.touched\\\" class=\\\"error-text\\\">\\n      <li *ngIf=\\\"newPassword.errors?.required\\\">Das neue Passwort muss angegeben werden.</li>\\n      <li *ngIf=\\\"newPassword.errors?.minlength\\\">Das neue Passwort muss 8 bis 12 Zeichen enthalten.</li>\\n      <li *ngIf=\\\"newPassword.errors?.pattern\\\">\\n        Das neue Passwort muss zumindest jeweils einen Großbuchstaben, Kleinbuchstaben und eine Zahl enthalten.\\n      </li>\\n    </ul>\\n\\n    <div class=\\\"form-row\\\">\\n      <label class=\\\"form-label\\\" for=\\\"repeat-password-input\\\">Passwort wiederholen</label>\\n      <input type=\\\"password\\\" class=\\\"form-input\\\" id=\\\"repeat-password-input\\\" name=\\\"repeatPassword\\\"\\n             placeholder=\\\"Neues Passwort wiederholen\\\" autocomplete=\\\"new-password\\\" [confirm]=\\\"newPassword\\\"\\n             #repeatPassword=\\\"ngModel\\\" ngModel>\\n    </div>\\n    <ul *ngIf=\\\"repeatPassword.invalid && repeatPassword.touched\\\" class=\\\"error-text\\\">\\n      <li *ngIf=\\\"repeatPassword.errors?.confirm\\\">Die Passwörter stimmen nicht überein.</li>\\n    </ul>\\n\\n    <div class=\\\"form-row form-row-center\\\">\\n      <button class=\\\"button button-submit\\\" [disabled]=\\\"form.invalid\\\">Änderung speichern</button>\\n    </div>\\n\\n    <div *ngIf=\\\"success\\\" class=\\\"form-row form-row-center\\\">Das Passwort wurde geändert.</div>\\n    <div *ngIf=\\\"errorMessage\\\" class=\\\"form-row form-row-center\\\">Fehler: {{errorMessage}}</div>\\n  </form>\\n</main>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/options/options.component.html\n// module id = ./src/app/components/options/options.component.html\n// module chunks = main","import {Component} from '@angular/core';\nimport {NgForm} from '@angular/forms';\n\nimport {UserService} from '../../services';\n\n@Component({\n  templateUrl: './options.component.html'\n})\nexport class OptionsComponent {\n  success = false;\n  errorMessage: string = null;\n  serverErrors: any = {};\n\n  constructor(private readonly userService: UserService) {\n  }\n\n  public changePassword(form: NgForm): void {\n    this.userService.changePassword(form.value.oldPassword, form.value.newPassword)\n      .subscribe(() => {\n        form.resetForm();\n        this.success = true;\n        this.errorMessage = null;\n        this.serverErrors = null;\n      }, response => {\n        this.success = false;\n        this.errorMessage = response.message;\n        this.serverErrors = response.errors || null;\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/options/options.component.ts","module.exports = \"<aside class=\\\"elements\\\" aria-labelledby=\\\"elementsheadline\\\" aria-hidden=\\\"true\\\">\\n  <h2 id=\\\"arrowsheadline\\\">Verfügbare Verbindungen</h2>\\n  <ul class=\\\"arrow-list\\\">\\n    <li class=\\\"arrow\\\" aria-labelledby=\\\"connector\\\" tabindex=\\\"0\\\" title=\\\"Verbindung\\\" #arrowAdd>\\n      <dl class=\\\"arrow-properties\\\">\\n        <dt class=\\\"accessibility\\\">Elementtyp</dt>\\n        <dd id=\\\"connector\\\" class=\\\"arrow-type\\\">Verbindung</dd>\\n      </dl>\\n      <div class=\\\"arrow-image\\\">\\n        <svg width=\\\"72px\\\" height=\\\"20px\\\">\\n          <defs>\\n            <marker id=\\\"arrow-marker-side\\\" markerWidth=\\\"10\\\" markerHeight=\\\"10\\\" refY=\\\"4\\\" orient=\\\"auto\\\">\\n              <path d=\\\"M0,0 L0,8 L8,4 z\\\" class=\\\"arrow-marker\\\"></path>\\n            </marker>\\n          </defs>\\n          <path class=\\\"arrow-path\\\" d=\\\"M0,10 L56,10\\\" marker-end=\\\"url(#arrow-marker-side)\\\"></path>\\n        </svg>\\n      </div>\\n    </li>\\n  </ul>\\n\\n  <h2 id=\\\"elementsheadline\\\">Verfügbare Geräte</h2>\\n  <ul id=\\\"devices\\\" class=\\\"device-list draggables\\\">\\n    <li app-available-device *ngFor=\\\"let device of available | async\\\" [data]=\\\"device\\\"></li>\\n  </ul>\\n</aside>\\n\\n<main aria-labelledby=\\\"diagramheadline\\\">\\n  <div class=\\\"diagram-header\\\">\\n    <h2 class=\\\"main-headline\\\" id=\\\"diagramheadline\\\">Produktionskette</h2>\\n    <div id=\\\"counter\\\" class=\\\"diagram-header-right\\\">\\n      <!-- TODO Implement the product counter -->\\n      {{deviceCount | async}} Elemente - {{arrowCount | async}} Pfeile - 0 Produkte\\n    </div>\\n  </div>\\n\\n  <app-diagram [arrowAdd]=\\\"arrowAdd\\\"></app-diagram>\\n</main>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/overview/overview.component.html\n// module id = ./src/app/components/overview/overview.component.html\n// module chunks = main","import {Component} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\n\nimport {AvailableDevice} from '../../models/device.available';\nimport {DeviceService} from '../../services';\n\n@Component({\n  templateUrl: './overview.component.html'\n})\nexport class OverviewComponent {\n  constructor(private readonly deviceService: DeviceService) {\n  }\n\n  get deviceCount(): Observable<number> {\n    return this.deviceService.getDeviceCount();\n  }\n\n  get arrowCount(): Observable<number> {\n    return this.deviceService.getArrowCount();\n  }\n\n  get available(): Observable<AvailableDevice[]> {\n    return this.deviceService.getAvailable();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/overview/overview.component.ts","import {Injectable} from '@angular/core';\nimport {Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\nimport {AuthenticationService} from '../services';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private readonly router: Router, private readonly authenticationService: AuthenticationService) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authenticationService.isLoggedIn) {\n      return true;\n    }\n    // noinspection JSIgnoredPromiseFromCall\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/auth.guard.ts","export * from './auth.guard';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/index.ts","import './device.model';\n\ndeclare global {\n  class Arrow {\n    readonly startDevice: Device<any>;\n    endDevice: Device<any> | null;\n\n    constructor(startDevice: Device<any>, endDevice?: Device<any>);\n  }\n}\n\nexport {};\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/arrow.model.ts","/**\n * Definition for the control for a device\n */\nexport interface Control<T> {\n\n  /**\n   * Title of this control\n   */\n  title: string;\n\n  /**\n   * Type of this control (ENUM, BOOLEAN, CONTINUOUS)\n   */\n  type: ControlType;\n\n  /**\n   * The current value for this control (number iff type is CONTINUOUS or ENUM, boolean if type is BOOLEAN)\n   */\n  current: T;\n\n  /**\n   * Previous changes to this control\n   */\n  log: LogEntry<T>[];\n}\n\nexport interface BooleanControl extends Control<boolean> {\n  /**\n   * Lock the type to BOOLEAN\n   */\n  type: ControlType.BOOLEAN;\n}\n\nexport interface EnumControl extends Control<number> {\n  /**\n   * Lock the type to ENUM\n   */\n  type: ControlType.ENUM;\n\n  /**\n   * Possible values for this control\n   */\n  readonly values: string[];\n}\n\nexport interface ContinuousControl extends Control<number> {\n  /**\n   * Lock the type to CONTINUOUS\n   */\n  type: ControlType.CONTINUOUS;\n\n  /**\n   * Label for the y-axis of the plot\n   */\n  readonly yLabel: string;\n\n  /**\n   * Minimum value for this control\n   */\n  readonly min: number;\n\n  /**\n   * Maximum value for this control\n   */\n  readonly max: number;\n}\n\n/**\n * One entry in the list of logs\n */\nexport interface LogEntry<T> {\n  readonly date: Date;\n  readonly oldValue: T;\n  readonly newValue: T;\n}\n\nexport enum ControlType {\n  BOOLEAN = 'boolean',\n  ENUM = 'enum',\n  CONTINUOUS = 'continuous'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/control.ts","export * from './authentication.request';\nexport * from './password.change.request';\nexport * from './control';\nexport * from './device.available';\nexport * from './device.rest';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/index.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport { RestClient } from './rest.client';\nimport { AuthenticationRequest } from '../models';\nimport { TokenModel } from '../models/token.model';\n\n@Injectable()\nexport class AuthenticationClient extends RestClient {\n  constructor(httpClient: HttpClient) {\n    super('/authentication', httpClient);\n  }\n\n  public authenticate(authenticationRequest: AuthenticationRequest): Observable<TokenModel> {\n    return this.post(null, authenticationRequest);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/rest/authentication.client.ts","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\n\nimport {RestClient} from './rest.client';\nimport {AvailableDevice, RestDevice} from '../models';\n\n@Injectable()\nexport class DeviceClient extends RestClient {\n  constructor(httpClient: HttpClient) {\n    super('/devices', httpClient);\n  }\n\n  public getAvailable(): Observable<AvailableDevice[]> {\n    return this.get('/available');\n  }\n\n  public getDevices(): Observable<RestDevice<any>[]> {\n    return this.get(null);\n  }\n\n  public addDevice(device: RestDevice<any>) {\n    return this.post(null, device);\n  }\n\n  public moveDevice(device: Device<any>) {\n    return this.patch(`/${device.index}`, {position: device.getPosition()});\n  }\n\n  public deleteDevice(device: Device<any>) {\n    return this.delete(`/${device.index}`);\n  }\n\n  public addArrow(arrow: Arrow) {\n    return this.post(`/${arrow.startDevice.index}/successors`, {index: arrow.endDevice.index});\n  }\n\n  public deleteArrow(arrow: Arrow) {\n    return this.delete(`/${arrow.startDevice.index}/successors/${arrow.endDevice.index}`);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/rest/device.client.ts","export * from './authentication.client';\nexport * from './device.client';\nexport * from './password.client';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/rest/index.ts","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\n\nimport {RestClient} from './rest.client';\nimport {PasswordChangeRequest} from '../models';\n\n@Injectable()\nexport class PasswordClient extends RestClient {\n  constructor(httpClient: HttpClient) {\n    super('/password', httpClient);\n  }\n\n  public changePassword(changeRequest: PasswordChangeRequest): Observable<void> {\n    return this.put(null, changeRequest);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/rest/password.client.ts","import {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\n\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/throw';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/share';\r\n\r\nimport {environment} from '../../environments/environment';\r\n\r\nexport abstract class RestClient {\r\n  private readonly baseUrl;\r\n\r\n  protected constructor(endpointUrl: string, private readonly httpClient: HttpClient) {\r\n    this.baseUrl = environment.apiEndpoint + endpointUrl;\r\n  }\r\n\r\n  protected get<T>(url?: string, params?): Observable<T> {\r\n    return this.request('get', url, params);\r\n  }\r\n\r\n  protected post<T>(url: string, body, params?): Observable<T> {\r\n    return this.request('post', url, params, body);\r\n  }\r\n\r\n  protected put<T>(url: string, body, params?): Observable<T> {\r\n    return this.request('put', url, params, body);\r\n  }\r\n\r\n  protected patch<T>(url: string, body, params?): Observable<T> {\r\n    return this.request('patch', url, params, body);\r\n  }\r\n\r\n  protected delete<T>(url: string, params?): Observable<T> {\r\n    return this.request('delete', url, params);\r\n  }\r\n\r\n  private request<T>(method: string, url?: string, params?, body?): Observable<T> {\r\n    const fullUrl = url ? this.baseUrl + url : this.baseUrl;\r\n    return this.httpClient\r\n      .request<T>(method, fullUrl, {body, params})\r\n      .share()\r\n      .catch((response: HttpErrorResponse) => {\r\n        console.log(`Request to ${fullUrl} failed:`, response);\r\n        return Observable.throw(response.status && response.error ? response.error : response);\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/rest/rest.client.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { TokenModel } from '../models/token.model';\n\n\n@Injectable()\nexport class AppLoadService {\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  constructor(private http: HttpClient) { }\n\n  checkTokenExpiration() {\n    const token = JSON.parse(localStorage.getItem('token'));\n    this.http.post('http://localhost:8081/token', {'token': token}, this.httpOptions).subscribe(data => {\n      console.log(data);\n    }, response => {\n      console.log(response.error);\n    });\n  }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/app-load.service.ts","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\nimport {AuthenticationClient} from '../rest';\nimport {SessionStorageService} from './session-storage.service';\n\n@Injectable()\nexport class AuthenticationService {\n  constructor(private readonly restClient: AuthenticationClient, private readonly sessionStorageService: SessionStorageService) {\n  }\n\n  get isLoggedIn(): boolean {\n    return this.sessionStorageService.loggedIn;\n  }\n\n  login(username: string, password: string) {\n    return this.restClient.authenticate({\n      username: username, password: password\n    }).map(data => {\n      const token = data.token;\n      console.log(token);\n      this.sessionStorageService.setToken(token);\n      this.sessionStorageService.setLoggedIn(true);\n    });\n  }\n\n  logout(): void {\n    this.sessionStorageService.setLoggedIn(false);\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/authentication.service.ts","import {Injectable} from '@angular/core';\r\n\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {ReplaySubject} from 'rxjs/ReplaySubject';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport {AvailableDevice, Control, LogEntry} from '../models';\r\nimport {DeviceClient} from '../rest';\r\nimport '../models/arrow.model';\r\nimport '../models/device.model';\r\n\r\n@Injectable()\r\nexport class DeviceService {\r\n  private available: Subject<AvailableDevice[]>;\r\n  private readonly devices: Subject<Device<any>[]>;\r\n  private readonly arrows: Subject<Arrow[]>;\r\n  private readonly logUpdates: Subject<LogUpdate<any>>;\r\n  private ws: WebSocket;\r\n  public skip = false;\r\n\r\n  constructor(private readonly deviceClient: DeviceClient) {\r\n    this.devices = new ReplaySubject();\r\n    this.arrows = new ReplaySubject();\r\n\r\n    this.deviceClient.getDevices().subscribe(data => {\r\n      // Transform the server device list to the device objects needed for the diagram\r\n      const devices = data.map(dev => new Device(dev.index, dev.position, dev.type, dev.title, dev.control));\r\n\r\n      // Add arrows for all the successors in the server device list\r\n      const arrows = data.reduce((result, dev) => {\r\n        const device = devices.find(d => d.index === dev.index),\r\n          successors = dev.successors.map(index => new Arrow(device, devices.find(d => d.index === index)));\r\n        return result.concat(successors);\r\n      }, []);\r\n\r\n      this.devices.next(devices);\r\n      this.arrows.next(arrows);\r\n    });\r\n\r\n    this.logUpdates = new Subject();\r\n\r\n    // TODO Create a WebSocket and subscribe to incoming messages\r\n    this.ws = new WebSocket('ws://localhost:40510');\r\n    // event emmited when connected\r\n    this.ws.onopen = function () {\r\n      console.log('websocket is connected ...')\r\n    }\r\n    // event emmited when receiving message\r\n    let self = this;\r\n    this.ws.onmessage = function (ev) {\r\n      if(JSON.parse(ev.data).type === \"update\"){\r\n        self.skip = true\r\n        const device = self.getDevice(JSON.parse(ev.data).index);\r\n        let help;\r\n        device.subscribe(el => help = el);\r\n\r\n        self.updateDevice(help, JSON.parse(ev.data).value);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  getAvailable(): Observable<AvailableDevice[]> {\r\n    if (!this.available) {\r\n      this.available = new BehaviorSubject([]);\r\n      this.deviceClient.getAvailable().subscribe(available => this.available.next(available));\r\n    }\r\n    return this.available;\r\n  }\r\n\r\n  getDevices(): Observable<Device<any>[]> {\r\n    return this.devices;\r\n  }\r\n\r\n  getDevice(index: number): Observable<Device<any>> {\r\n    return this.devices.map(devices => devices.find(d => d.index === index));\r\n  }\r\n\r\n  getDeviceCount(): Observable<number> {\r\n    return this.devices.map(devices => devices.length);\r\n  }\r\n\r\n  addDevice(device: Device<any>): void {\r\n    this.devices.first().subscribe(devices => {\r\n      devices.push(device);\r\n      this.devices.next(devices);\r\n    });\r\n\r\n    this.deviceClient.addDevice({\r\n      index: device.index,\r\n      type: device.type,\r\n      title: device.title,\r\n      control: device.control,\r\n      position: device.getPosition()\r\n    }).subscribe();\r\n  }\r\n\r\n  deleteDevice(device: Device<any>): void {\r\n    this.devices.first().subscribe(devices => {\r\n      const index = devices.indexOf(device);\r\n      if (index >= 0) {\r\n        devices.splice(index, 1);\r\n      }\r\n      this.devices.next(devices);\r\n    });\r\n\r\n    this.deviceClient.deleteDevice(device).subscribe();\r\n  }\r\n\r\n  moveDevice(device: Device<any>): void {\r\n    this.deviceClient.moveDevice(device).subscribe();\r\n  }\r\n\r\n  getLogUpdates(): Observable<LogUpdate<any>> {\r\n    return this.logUpdates;\r\n  }\r\n\r\n  updateDevice<T>(device: Device<Control<T>>, value: T): void {\r\n    // TODO Send updated values to server via WebSocket\r\n    if(!this.skip){\r\n      const msg = {\r\n        type: \"update\",\r\n        value: value,\r\n        index:   device.index\r\n      };\r\n      this.ws.send(JSON.stringify(msg));\r\n    }\r\n    this.setDeviceValue(device, value);\r\n    this.skip = false;\r\n  }\r\n\r\n  private setDeviceValue<T>(device: Device<Control<T>>, value: T): void {\r\n    const logEntry = {\r\n      date: new Date(),\r\n      oldValue: device.control.current,\r\n      newValue: value\r\n    };\r\n\r\n    device.control.log.push(logEntry);\r\n    device.control.current = value;\r\n    device.updateDevice();\r\n\r\n    this.logUpdates.next({device, logEntry});\r\n  }\r\n\r\n  getArrows(): Observable<Arrow[]> {\r\n    return this.arrows;\r\n  }\r\n\r\n  getArrowCount(): Observable<number> {\r\n    return this.arrows.map(arrows => arrows.length);\r\n  }\r\n\r\n  addArrow(arrow: Arrow): void {\r\n    this.arrows.first().subscribe(arrows => {\r\n      arrows.push(arrow);\r\n      this.arrows.next(arrows);\r\n    });\r\n\r\n    this.deviceClient.addArrow(arrow).subscribe();\r\n  }\r\n\r\n  deleteArrow(arrow: Arrow): void {\r\n    this.arrows.first().subscribe(arrows => {\r\n      const index = arrows.indexOf(arrow);\r\n      if (index >= 0) {\r\n        arrows.splice(index, 1);\r\n      }\r\n      this.arrows.next(arrows);\r\n    });\r\n\r\n    this.deviceClient.deleteArrow(arrow).subscribe();\r\n  }\r\n}\r\n\r\ninterface LogUpdate<T> {\r\n  device: Device<Control<T>>;\r\n  logEntry: LogEntry<T>;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/device.service.ts","import {Injectable, NgZone} from '@angular/core';\nimport {Router} from '@angular/router';\nimport 'rxjs/add/operator/first';\n\nimport {DeviceService} from './device.service';\nimport '../models/arrow.model';\nimport '../models/device.model';\n\n@Injectable()\nexport class DiagramService {\n  constructor(private readonly router: Router, private zone: NgZone, private readonly deviceService: DeviceService) {\n  }\n\n  initDevices(func: (device: Device<any>) => void): void {\n    this.deviceService.getDevices().first().subscribe(devices => devices.forEach(func));\n  }\n\n  initArrows(func: (arrow: Arrow) => void): void {\n    this.deviceService.getArrows().first().subscribe(arrows => arrows.forEach(func));\n  }\n\n  afterDeviceAdd(device: Device<any>): void {\n    this.deviceService.addDevice(device);\n  }\n\n  afterDeviceDelete(device: Device<any>): void {\n    this.deviceService.deleteDevice(device);\n  }\n\n  onDeviceDetails(device: Device<any>): void {\n    this.zone.run(() => {\n      this.router.navigate(['details', device.index]);\n    });\n  }\n\n  onDeviceMove(device: Device<any>): void {\n    this.deviceService.moveDevice(device);\n  }\n\n  afterArrowAdd(arrow: Arrow): void {\n    this.deviceService.addArrow(arrow);\n  }\n\n  afterArrowDelete(arrow: Arrow): void {\n    this.deviceService.deleteArrow(arrow);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/diagram.service.ts","export * from './authentication.service';\nexport * from './device.service';\nexport * from './diagram.service';\nexport * from './session-storage.service';\nexport * from './user.service';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/index.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SessionStorageService {\n  private _loggedIn: boolean;\n\n  constructor() {\n    this._loggedIn = !!localStorage.getItem('loggedIn');\n  }\n\n  get loggedIn(): boolean {\n    return this._loggedIn;\n  }\n\n  setLoggedIn(loggedIn: boolean): void {\n    this._loggedIn = loggedIn;\n    if (loggedIn) {\n      localStorage.setItem('loggedIn', 'true');\n    } else {\n      localStorage.removeItem('loggedIn');\n    }\n  }\n\n  setToken(token) {\n    localStorage.setItem('token', JSON.stringify(token));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/session-storage.service.ts","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { AuthenticationService } from './authentication.service';\nimport { Observable } from 'rxjs/Observable';\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(public auth: AuthenticationService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    request = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${this.auth.getToken()}`\n      }\n    });\n    return next.handle(request);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/token-interceptor.service.ts","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\n\nimport {PasswordClient} from '../rest';\n\n@Injectable()\nexport class UserService {\n  constructor(private readonly restClient: PasswordClient) {\n  }\n\n  changePassword(oldPassword: string, newPassword: string): Observable<void> {\n    return this.restClient.changePassword({oldPassword, newPassword});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/user.service.ts","import {Directive, Input, OnDestroy} from '@angular/core';\nimport {NG_VALIDATORS, AbstractControl, ValidationErrors, Validator} from '@angular/forms';\nimport {Subscription} from 'rxjs/Subscription';\n\n@Directive({\n  selector: '[confirm]',\n  providers: [{provide: NG_VALIDATORS, useExisting: ConfirmValidator, multi: true}]\n})\nexport class ConfirmValidator implements Validator, OnDestroy {\n  @Input('confirm')\n  original: AbstractControl;\n\n  private subscription: Subscription = null;\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n  }\n\n  validate(confirmation: AbstractControl): ValidationErrors | null {\n    if (!this.subscription) {\n      // When validating for the first time add a listener for updating the validation every time the original value changes\n      this.subscription = this.original.valueChanges.subscribe(() => confirmation.updateValueAndValidity());\n    }\n\n    return confirmation.value === this.original.value ? null : {\n      confirm: true\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/validators/confirm.validator.ts","export * from './confirm.validator';\nexport * from './max.validator';\nexport * from './min.validator';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/validators/index.ts","import {Directive, Input} from '@angular/core';\nimport {NG_VALIDATORS, Validator, Validators, ValidatorFn} from '@angular/forms';\n\n@Directive({\n  selector: '[max]',\n  providers: [{provide: NG_VALIDATORS, useExisting: MaxValidator, multi: true}]\n})\nexport class MaxValidator implements Validator {\n  @Input()\n  max: number;\n\n  get validate(): ValidatorFn {\n    return Validators.max(this.max);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/validators/max.validator.ts","import {Directive, Input} from '@angular/core';\nimport {NG_VALIDATORS, Validator, Validators, ValidatorFn} from '@angular/forms';\n\n@Directive({\n  selector: '[min]',\n  providers: [{provide: NG_VALIDATORS, useExisting: MinValidator, multi: true}]\n})\nexport class MinValidator implements Validator {\n  @Input()\n  min: number;\n\n  get validate(): ValidatorFn {\n    return Validators.min(this.min);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/validators/min.validator.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  // TODO Update accordingly\n  apiEndpoint: `http://${location.hostname}:8081`,\n  webSocketEndpoint: `ws://${location.hostname}:8081`\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}